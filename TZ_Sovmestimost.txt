Техническое задание: сайт-игра «Совместимость»

1) Цель и идея
Сайт запускается локально на ноутбуке/ПК в день рождения Светы и показывает «совместимость» каждого гостя со Светой по её дате рождения. Данные и трактовки подтягиваются с LUNIK RF (и/или вводятся вручную), затем оформляются в «магической» подаче в стиле между LUNIK RF и «натальной картой».

2) Объём (MVP)
- Один экран для добавления участников.
- Экран результата совместимости (индекс + красивые трактовки).
- Локальное хранение (без интернета после первичной загрузки/кэша).
- Экспорт/импорт списка участников (CSV/JSON) — опционально.

3) Входные данные
- Дата рождения Светы (фиксируется заранее в настройках).
- Список участников: ФИО/ник, дата рождения (обяз.), время/город (опционально).
- Источник интерпретаций:  
  а) Онлайн-обращение к LUNIK RF (если доступно и разрешено по ToS),  
  б) Локальный справочник трактовок (fallback),  
  в) Ручной ввод/правка текстов админом.

4) Логика совместимости (уровень MVP)
- Вычисляем ключевые числовые/астрологические показатели для Светы и участника (набор метрик согласуем: число судьбы, жизненный путь, совместимость знаков и т. п.).
- Формируем интегральный «индекс совместимости» (0–100) по весовой формуле.
- Подставляем трактовки: общая, сильные стороны дуэта, зоны риска, «совет».
- Подаём результат через анимацию «ритуала/раскрытия карты».

5) Интеграция с LUNIK RF
- Вариант A (онлайн): REST-парсер/скрейп (если нет публичного API).  
  – Проверять и соблюдать правила сайта и robots/ToS.  
  – Рейт-лимит, кэш ответов локально (IndexedDB/LocalStorage/файлы).  
- Вариант B (офлайн): выгрузка заранее (JSON/CSV) и локальный словарь трактовок.  
- Переключатель «Источник данных»: LUNIK / Локально / Комбинированно.
- Логи запросов и graceful-fallback при недоступности LUNIK.

6) UX/UI (референс-стиль)
- Визуал: тёмный фон, тонкие неон-линии/звёздная сетка, аккуратная типографика.  
- Экран «Добавить участника»: минимальная форма + быстрый ввод по Enter.  
- Экран результата:  
  – Аватар-знак/сигил Светы + участника,  
  – Кольцевая диаграмма индекса,  
  – 3–5 «глифов совместимости» (иконки аспектов),  
  – Карточки «Сила / Риск / Совет»,  
  – Кнопка «Показать магический факт» (рандомная красивая фраза).  
- «Особенная генерация»: небольшая сцена — вращающаяся карта/мандала, части которой «сходятся» при вычислении, затем «проявляются» текстовые блоки (fade/blur → reveal).

7) Пользовательские потоки
1. Настройка (один раз): ввести дату Светы → выбрать источник данных → тест соединения с LUNIK → сохранить.  
2. Игровой день: добавить гостей → нажать «Проверить» → по очереди показывать совместимость с анимацией → опционально сохранить/распечатать карточку.  
3. Админ: править тексты трактовок и веса формулы (JSON-конфиг).

8) Нефункциональные требования
- Полностью локальный запуск (статический сайт): без сервера, либо с лёгким локальным сервером (Node/Express) для кросс-доменных запросов к LUNIK (если нужно проксирование CORS).  
- Производительность: результат за ≤1,5 сек на сред. ноутбуке.  
- Надёжность: кэширование; всё должно работать, даже если LUNIK недоступен.  
- Конфиденциальность: никаких внешних отправок данных гостей; локальные файлы.

9) Технологии
- Frontend: HTML5, CSS (Tailwind или кастом SCSS), Vanilla JS или Vue/React (MVP можно на Vanilla + Alpine).  
- Визуальные эффекты: CSS animations + WebGL/Canvas (опционально) для «мандалы».  
- Данные: IndexedDB/LocalStorage; JSON-конфиг для формул и трактовок.  
- Интеграция: fetch() + локальный прокси (если потребуется) для LUNIK.

10) Структура проекта
/compat/
  index.html
  /assets/ (иконки, шрифты)
  /styles/style.css
  /scripts/app.js
  /scripts/compute.js         // формулы и индекс
  /scripts/providers/lunik.js  // интеграция/кэш
  /data/texts.json             // трактовки (fallback)
  /data/config.json            // дата Светы, веса, флаги источников

11) Конфигурация (пример)
{
  "svetaBirth": "YYYY-MM-DD",
  "weights": { "lifepath": 0.4, "sign": 0.3, "elements": 0.2, "misc": 0.1 },
  "dataSource": "lunik|local|hybrid",
  "animations": { "enabled": true, "durationMs": 900 }
}

12) Алгоритм (псевдо)
for guest in guests:
  g = parseBirth(guest.dob)
  s = parseBirth(Sveta.dob)
  metrics = {
    lifepathMatch: compareLifePath(s, g),
    signAffinity: compareZodiac(s, g),
    elementBalance: compareElements(s, g),
    misc: compareExtras(s, g)
  }
  index = weightedSum(metrics, weights) * 100
  texts = getInterpretations(source: LUNIK|local, s, g, metrics, index)
  renderResult(guest, index, texts, withAnimation=true)

13) Правовые/этические заметки
- Проверить условия использования LUNIK RF: разрешённость автоматического обращения, объём/частота, цитирование. При запрете — использовать только локальные тексты и ручной ввод.  
- Отдельный файл LICENSE/NOTICE: «развлекательный характер», хранение персональных данных локально, возможность удаления данных гостя.

14) Тестирование
- Юнит-тест формул (граничные даты, високосный год).  
- Тест оффлайн-режима и падения LUNIK.  
- Визуальные снапшоты экранов (контраст/читабельность на проекторе/ТВ).

15) План MVP
- День 1–2: каркас, ввод гостей, локальный расчёт, базовые тексты.  
- День 3: интеграция с LUNIK (если допустимо) + кэш.  
- День 4: анимация и финальный «ритуал» показа.  
- День 5: полировка, набор демо-трактовок, чек-лист запуска.
